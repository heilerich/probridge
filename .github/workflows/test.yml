on: [push, pull_request]

jobs:
  build_docker:
    name: Run integration tests (go ${{ matrix.go-version }})
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    strategy:
      matrix:
        go-version: ['1.15.6']

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'
      
      - name: Apply patches
        env:
          GO_VERSION: ${{ matrix.go-version }}
        run: |
          envsubst '${GO_VERSION}' < Dockerfile > upstream/Dockerfile
          pushd upstream && git apply ../patches/*.patch && popd
          cp -rv ./seed upstream/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host

      - name: Setup Buildx Cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-test-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-test-

      - name: Build container
        uses: docker/build-push-action@v2
        with:
          context: ./upstream
          platforms: linux/amd64
          push: true
          tags: localhost:5000/test/test:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        # Potential solution
        # https://github.com/docker/buildx/pull/535
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python3.8 -m pip install --upgrade pip
          if [ -f tests/requirements.txt ]; then python3.8 -m pip install -r tests/requirements.txt; fi

      - name: Run tests
        env:
          TEST_USER: ${{ secrets.TEST_USER }}
          TEST_USER_PW: ${{ secrets.TEST_USER_PW }}
          TEST_OUTPUT: "/tmp/build/junit-reports/"
        run: python3.8 tests/test_container_pro.py

      - uses: check-run-reporter/action@v2.0.0
        # always run, otherwise you'll only see results for passing builds
        if: ${{ always() }}
        with:
          token: ${{ secrets.CHECK_RUN_REPORTER_TOKEN }}
          report: '/tmp/build/junit-reports/*.xml'

